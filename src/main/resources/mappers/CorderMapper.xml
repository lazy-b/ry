<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"      
 "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
 <!-- 订单处理Mapper -->
<mapper namespace="cn.fenix.ry.dao.CorderDao">
  <resultMap id="BaseResultMap" type="cn.fenix.ry.entity.Corder">
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="orderDate" property="orderDate" jdbcType="VARCHAR" />
    <result column="requiredDate" property="requiredDate" jdbcType="VARCHAR" />
    <result column="orderNo" property="orderNo" jdbcType="VARCHAR" />
    <result column="materialCoding" property="materialCoding" jdbcType="VARCHAR" />
    <result column="productName" property="productName" jdbcType="VARCHAR" />
    <result column="orderAmount" property="orderAmount" jdbcType="INTEGER" />
    <result column="spareParts" property="spareParts" jdbcType="INTEGER" />
    <result column="stockAmount" property="stockAmount" jdbcType="DOUBLE" />
    <result column="planAmount" property="planAmount" jdbcType="INTEGER" />
    <result column="materialModel" property="materialModel" jdbcType="VARCHAR" />
    <result column="purchaseRequirement" property="purchaseRequirement" jdbcType="VARCHAR" />
    <result column="replyDate" property="replyDate" jdbcType="VARCHAR" />
    <result column="orderStatus" property="orderStatus" jdbcType="INTEGER" />
    <result column="exceptionReason" property="exceptionReason" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="DOUBLE" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="orderType" property="orderType" jdbcType="INTEGER" />
  </resultMap>
  
  	<!--查找所有订单信息 -->
    <select id="find" parameterType="string" resultType="map"> 
    	select 
    		id,orderDate,requiredDate,orderNo,materialCoding,
  			productName,orderAmount,spareParts,stockAmount,planAmount,materialModel,
    		purchaseRequirement, replyDate, orderStatus, exceptionReason,	
  			price,remark,orderType
  		 from 
    		 orderInformation order by orderNo;
    </select>
   	<!--插入订单 -->
   	<insert id="insert" parameterType="cn.fenix.ry.entity.Corder" >
    	insert into orderinformation (id, orderDate, requiredDate, 
     	 	orderNo, materialCoding, productName, 
      	 	orderAmount, spareParts, stockAmount, 
         	planAmount, materialModel, purchaseRequirement, 
         	replyDate, orderStatus, exceptionReason, 
         	price, remark, orderType
         	)
    	values(
    		#{id,jdbcType=VARCHAR},
     		#{orderDate,jdbcType=VARCHAR}, 
     		#{requiredDate,jdbcType=VARCHAR}, 
      		#{orderNo,jdbcType=VARCHAR},
      		#{materialCoding,jdbcType=VARCHAR},
        	#{productName,jdbcType=VARCHAR}, 
      		#{orderAmount,jdbcType=INTEGER},
       		#{spareParts,jdbcType=INTEGER},
        	#{stockAmount,jdbcType=DOUBLE}, 
      		#{planAmount,jdbcType=INTEGER}, 
      		#{materialModel,jdbcType=VARCHAR},
       		#{purchaseRequirement,jdbcType=VARCHAR}, 
      		#{replyDate,jdbcType=VARCHAR},
			#{orderStatus,jdbcType=INTEGER},
 			#{exceptionReason,jdbcType=VARCHAR}, 
      		#{price,jdbcType=DOUBLE},
       		#{remark,jdbcType=VARCHAR},
       	 	#{orderType,jdbcType=INTEGER})	
  	</insert>
  <!-- 批量删除 -->
	<delete id="delete">
		delete from orderInformation
    	where id in
		<foreach collection="array" item="ids" open="(" close=")" separator=",">
			#{ids}
		</foreach>
	</delete>
	
  <!-- 修改订单 -->                                
  <update id="update" parameterType="cn.fenix.ry.entity.Corder">
    update orderInformation
    <set>
      <if test="orderDate != null" >
        orderDate=#{orderDate,jdbcType=VARCHAR},
      </if>
      <if test="requiredDate != null" >
        requiredDate=#{requiredDate,jdbcType=VARCHAR},
      </if>
      <if test="orderNo != null" >
        orderNo=#{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="materialCoding != null" >
        materialCoding=#{materialCoding,jdbcType=VARCHAR},
      </if>
      <if test="productName != null" >
        productName=#{productName,jdbcType=VARCHAR},
      </if>
      <if test="orderAmount != null" >
        orderAmount=#{orderAmount,jdbcType=VARCHAR},
      </if>
      <if test="spareParts != null" >
        spareParts=#{spareParts,jdbcType=VARCHAR},
      </if>
      <if test="stockAmount != null" >
        stockAmount=#{stockAmount,jdbcType=VARCHAR}, 
      </if>
      <if test="planAmount != null" >
        planAmount=#{planAmount,jdbcType=VARCHAR}, 
      </if>
      <if test="materialModel != null" >
        materialModel=#{materialModel,jdbcType=VARCHAR},
      </if>
      <if test="purchaseRequirement != null" >
        purchaseRequirement=#{purchaseRequirement,jdbcType=VARCHAR}, 
      </if>
      <if test="replyDate != null" >
        replyDate=#{replyDate,jdbcType=VARCHAR},
      </if>
      <if test="orderStatus != null" >
        orderStatus=#{orderStatus,jdbcType=VARCHAR},
      </if>		
      <if test="exceptionReason != null" >
        exceptionReason=#{exceptionReason,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        price =#{price,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark=#{remark,jdbcType=VARCHAR},
      </if>
      <if test="orderType != null" >
        orderType=#{orderType,jdbcType=VARCHAR}
      </if>
    </set>
    where id=#{id,jdbcType=VARCHAR}
  </update>
</mapper>