<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"      
 "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
 <!-- 订单处理Mapper -->
<mapper namespace="cn.fenix.ry.dao.ScheduleDao">
<resultMap id="BaseResultMap" type="cn.fenix.ry.entity.Schedule" >
    <id column="id" property="Id" jdbcType="VARCHAR" />
    <result column="orderNo" property="orderNo" jdbcType="VARCHAR" />
    <result column="productName" property="productName" jdbcType="VARCHAR" />
    <result column="batch" property="batch" jdbcType="INTEGER" />
    <result column="reciverOrder" property="reciverOrder" jdbcType="TIMESTAMP" />
    <result column="planPrductTime" property="planPrducttime" jdbcType="TIMESTAMP" />
    <result column="productStatus" property="productStatus" jdbcType="INTEGER" />
    <result column="planProductFinish" property="planProductFinish" jdbcType="TIMESTAMP" />
    <result column="productFinishStatus" property="productFinishStatus" jdbcType="INTEGER" />
    <result column="planOrderFinish" property="planOrderFinish" jdbcType="TIMESTAMP" />
    <result column="orderFinishStatus" property="orderFinishStatus" jdbcType="INTEGER" />
  </resultMap>
  <select id="findAllSchedule" parameterType="String" resultType="map">
  	select * from ScheduleTable where 1=1 order by productName;
  </select>
  <select id="findScheduleByParames" parameterType="map" resultType="map">
  	select 
  				id,
	   			orderNo,
	  			productName,
	   			batch,
	  			reciverOrder,
	   			planPrductTime,
	    		productStatus,
	   			planProductFinish,
	  			productFinishStatus,
	    		planOrderFinish,
	  			orderFinishStatus
  		from    
  				scheduleTable
  		 		<where>
  		 			<trim prefixOverrides="and">
  		 				<if test="orderNo!=null">
  		 					orderNo=#{orderNo}
  		 				</if>
  		 				<if test="productName!=null">
  		 					and productName=#{productName}
  		 				</if>
  		 			</trim>
  		 		</where>
  </select>	
  <!-- 增加 -->						
    <insert id="addSchedule" parameterType="cn.fenix.ry.entity.Schedule" >
    insert into scheduletable (id, orderNo, productName, 
      batch, reciverOrder, planPrductTime, 
      productStatus, planProductFinish, productFinishStatus, 
      planOrderFinish, orderFinishStatus)
    values (#{id,jdbcType=VARCHAR}, #{orderno,jdbcType=VARCHAR}, #{productname,jdbcType=VARCHAR}, 
      #{batch,jdbcType=INTEGER}, #{reciverorder,jdbcType=TIMESTAMP}, #{planprducttime,jdbcType=TIMESTAMP}, 
      #{productstatus,jdbcType=INTEGER}, #{planproductfinish,jdbcType=TIMESTAMP}, #{productfinishstatus,jdbcType=INTEGER}, 
      #{planorderfinish,jdbcType=TIMESTAMP}, #{orderfinishstatus,jdbcType=INTEGER})
  </insert>
   <!-- 修改 -->
  <update id="updateByPrimaryKey" parameterType="cn.fenix.ry.entity.Schedule" >
    update scheduletable
    <set >
      <if test="orderNo != null" >
        orderNo = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="productName != null" >
        productName = #{productName,jdbcType=VARCHAR},
      </if>
      <if test="batch != null" >
        batch = #{batch,jdbcType=INTEGER},
      </if>
      <if test="reciverOrder != null" >
        reciverOrder = #{reciverOrder,jdbcType=TIMESTAMP},
      </if>
      <if test="planPrductTime != null" >
        planPrductTime = #{planPrductTime,jdbcType=TIMESTAMP},
      </if>
      <if test="productStatus != null" >
        productStatus = #{productStatus,jdbcType=INTEGER},
      </if>
      <if test="planProductFinish != null" >
        planProductFinish = #{planProductFinish,jdbcType=TIMESTAMP},
      </if>
      <if test="productFinishStatus != null" >
        productFinishStatus = #{productFinishStatus,jdbcType=INTEGER},
      </if>
      <if test="planOrderFinish != null" >
        planOrderFinish = #{planOrderFinish,jdbcType=TIMESTAMP},
      </if>
      <if test="orderFinishStatus != null" >
        orderFinishStatus = #{orderFinishStatus,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <!-- 批量删除 -->
	<delete id="deleteBatchs">
		delete from scheduleTable
    	where id in
		<foreach collection="array" item="ids" open="(" close=")" separator=",">
			#{ids}
		</foreach>
	</delete>
</mapper>